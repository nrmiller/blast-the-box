com.millerni456.BlastTheBox.BlastTheBoxActivity -> com.millerni456.BlastTheBox.BlastTheBoxActivity:
    android.os.Handler uiHandler -> a
    com.millerni456.BlastTheBox.CE_SurfaceView surfaceView -> b
    com.millerni456.BlastTheBox.CE_Renderer renderer -> c
    com.millerni456.BlastTheBox.CE_Updater updater -> d
    com.millerni456.BlastTheBox.io.HighScores highscores -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
com.millerni456.BlastTheBox.Bullet -> com.millerni456.BlastTheBox.a:
    com.millerni456.BlastTheBox.Player player -> a
    miller.opengl.Vector location -> b
    miller.opengl.Vector velocity -> c
    miller.opengl.Vector acceleration -> d
    float yaw -> e
    com.millerni456.BlastTheBox.geometry.Cube c -> i
    boolean canDispose -> j
    boolean hasPierce -> f
    int pierceHits -> k
    int strength -> g
    com.millerni456.BlastTheBox.BulletParticles bp -> h
    void addToQueue(com.millerni456.BlastTheBox.utils.RenderQueue) -> a
    void update() -> a
    boolean checkCollision(com.millerni456.BlastTheBox.geometry.Cube) -> a
    int pickMissleTexture(int) -> a
    void clean() -> b
    boolean canDispose() -> c
    void setOrientation(float) -> a
    int getStrength() -> d
    void setPiercing(boolean) -> a
com.millerni456.BlastTheBox.BulletParticles -> com.millerni456.BlastTheBox.b:
    int MAX_PARTICLES -> a
    int MAX_FRAMES -> b
    java.util.ArrayList frames -> c
    java.util.ArrayList particles -> d
    int[] orange -> e
    int[] green -> f
    int[] blue -> g
    boolean canUpdate -> i
    boolean collided -> h
    com.millerni456.BlastTheBox.Bullet bullet -> j
    java.lang.Runnable delay -> k
    void addParticle() -> a
    void updateParticles() -> b
    void addToQueue(com.millerni456.BlastTheBox.utils.RenderQueue) -> a
    int pickTexture(int) -> a
    void cleanParticle(int) -> b
    void cleanAll() -> c
    void loadTextures(android.app.Activity,javax.microedition.khronos.opengles.GL10) -> a
    void access$0(com.millerni456.BlastTheBox.BulletParticles,boolean) -> a
com.millerni456.BlastTheBox.BulletParticles$1 -> com.millerni456.BlastTheBox.c:
    com.millerni456.BlastTheBox.BulletParticles this$0 -> a
    void run() -> run
com.millerni456.BlastTheBox.BulletTracker -> com.millerni456.BlastTheBox.d:
    java.util.ArrayList bullets -> a
    java.util.ArrayList listeners -> b
    boolean canFire -> m
    android.os.Handler bulletHandler -> n
    long waitTime -> c
    int ammo -> d
    int piercingBullets -> e
    boolean hasPierce -> o
    com.millerni456.BlastTheBox.geometry.Square s -> f
    com.millerni456.BlastTheBox.geometry.Square s1 -> g
    com.millerni456.BlastTheBox.geometry.Square s2 -> h
    com.millerni456.BlastTheBox.geometry.Square s3 -> i
    com.millerni456.BlastTheBox.geometry.Square[] nums -> j
    com.millerni456.BlastTheBox.geometry.Square[] nums1 -> k
    java.lang.Runnable bulletRunnable -> l
    void init(int) -> a
    void addListener(com.millerni456.BlastTheBox.event.BulletListener) -> a
    void addAmmo(int) -> b
    void addPiercingBullets(int) -> c
    void fire(com.millerni456.BlastTheBox.Player) -> a
    void update(java.util.ArrayList) -> a
    void addToQueue(com.millerni456.BlastTheBox.utils.RenderQueue) -> a
    void renderAmmoCounter(javax.microedition.khronos.opengles.GL10,int,int) -> a
    void renderPiercingCounter(javax.microedition.khronos.opengles.GL10,int,int) -> b
    void renderPowerups(javax.microedition.khronos.opengles.GL10,com.millerni456.BlastTheBox.Player,int,int) -> a
    int pickTextures() -> b
    int pickPierceTextures() -> c
    void clean() -> a
    void access$0(com.millerni456.BlastTheBox.BulletTracker,boolean) -> a
com.millerni456.BlastTheBox.BulletTracker$1 -> com.millerni456.BlastTheBox.e:
    com.millerni456.BlastTheBox.BulletTracker this$0 -> a
    void run() -> run
com.millerni456.BlastTheBox.CE_Renderer -> com.millerni456.BlastTheBox.f:
    com.millerni456.BlastTheBox.BlastTheBoxActivity app -> a
    com.millerni456.BlastTheBox.utils.AndroidGLCamera glCamera -> b
    com.millerni456.BlastTheBox.menus.MainMenu main -> c
    com.millerni456.BlastTheBox.menus.HighScoreMenu highscores -> d
    com.millerni456.BlastTheBox.menus.OptionsMenu options -> e
    com.millerni456.BlastTheBox.menus.GuideMenu guide -> f
    com.millerni456.BlastTheBox.menus.GameOverScreen gameover_screen -> g
    float[] light0 -> h
    float[] fogColor -> i
    float density -> j
    void init(javax.microedition.khronos.opengles.GL10) -> a
    void resize(javax.microedition.khronos.opengles.GL10,int,int) -> a
    void render(javax.microedition.khronos.opengles.GL10) -> b
    void reset(com.millerni456.BlastTheBox.utils.AndroidGLCamera) -> a
    void resetFogVariables() -> a
    void setup2DGraphics(javax.microedition.khronos.opengles.GL10) -> c
com.millerni456.BlastTheBox.CE_SurfaceView -> com.millerni456.BlastTheBox.g:
com.millerni456.BlastTheBox.CE_Updater -> com.millerni456.BlastTheBox.h:
    int STATE -> a
    boolean PERFORM_RENDER -> b
    com.millerni456.BlastTheBox.Game current_game -> c
    com.millerni456.BlastTheBox.BlastTheBoxActivity app -> d
    com.millerni456.BlastTheBox.CE_Renderer renderer -> e
    com.millerni456.BlastTheBox.event.BackButtonListener keyListener -> f
    float screen_width -> g
    float screen_height -> h
    boolean screen_selected -> i
    boolean left -> j
    boolean right -> k
    boolean fire -> l
    miller.opengl.Point2d touchXY -> m
    void update() -> update
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.millerni456.BlastTheBox.CE_Updater$1 -> com.millerni456.BlastTheBox.i:
    com.millerni456.BlastTheBox.CE_Updater this$0 -> a
    void update() -> update
com.millerni456.BlastTheBox.Controller -> com.millerni456.BlastTheBox.j:
    com.millerni456.BlastTheBox.geometry.Square[] squares -> a
    com.millerni456.BlastTheBox.geometry.Square cursor -> b
    void render(javax.microedition.khronos.opengles.GL10,int,int,boolean) -> a
    void clean() -> a
com.millerni456.BlastTheBox.CubePopulator -> com.millerni456.BlastTheBox.k:
    int FIELD_WIDTH -> a
    int DENSITY -> b
    int seq_width -> c
    int seq_index -> d
    boolean seq_first -> e
    boolean sequencing -> f
    int cooldown -> g
    com.millerni456.BlastTheBox.Row[] rows -> h
    boolean[] used -> i
    void createRows() -> a
    com.millerni456.BlastTheBox.Row getRow() -> b
    void giveRow(com.millerni456.BlastTheBox.Row) -> a
    com.millerni456.BlastTheBox.Row initializeRow(com.millerni456.BlastTheBox.GameSettings) -> a
com.millerni456.BlastTheBox.Darkener -> com.millerni456.BlastTheBox.l:
    int[] ids -> a
    com.millerni456.BlastTheBox.geometry.Square s -> b
    boolean canUpdate -> c
    android.os.Handler darkenHandler -> d
    int mode -> e
    int frame -> f
    java.lang.Runnable delay -> g
    void darken() -> a
    void lighten() -> b
    void upate() -> c
    void render(javax.microedition.khronos.opengles.GL10,int,int) -> a
    void clean() -> d
    void loadDarkenTextures(android.app.Activity,javax.microedition.khronos.opengles.GL10) -> a
    int access$0(com.millerni456.BlastTheBox.Darkener) -> a
    int access$1(com.millerni456.BlastTheBox.Darkener) -> b
    void access$2(com.millerni456.BlastTheBox.Darkener,int) -> a
    void access$3(com.millerni456.BlastTheBox.Darkener,boolean) -> a
com.millerni456.BlastTheBox.Darkener$1 -> com.millerni456.BlastTheBox.m:
    com.millerni456.BlastTheBox.Darkener this$0 -> a
    void run() -> run
com.millerni456.BlastTheBox.Explosion -> com.millerni456.BlastTheBox.n:
    int[] gray_P -> a
    int[] green_P -> b
    int[] blue_P -> c
    int[] red_P -> d
    int[] ids -> i
    boolean canDispose -> e
    miller.opengl.Point3d loc -> f
    int frame -> g
    com.millerni456.BlastTheBox.geometry.Square s -> j
    double distance -> h
    void loadExplosion(android.app.Activity,javax.microedition.khronos.opengles.GL10) -> a
    void addToQueue(com.millerni456.BlastTheBox.utils.RenderQueue) -> a
    void nextFrame() -> a
    boolean canDispose() -> b
    void clean() -> c
com.millerni456.BlastTheBox.ExplosionTracker -> com.millerni456.BlastTheBox.o:
    android.os.Handler explosionHandler -> c
    java.util.ArrayList explosions -> a
    boolean canUpdate -> d
    com.millerni456.BlastTheBox.ParticleManager pm -> b
    java.lang.Runnable explosionUpdater -> e
    void createExplosion(miller.opengl.Point3d,com.millerni456.BlastTheBox.geometry.Cube) -> a
    void addToQueue(com.millerni456.BlastTheBox.utils.RenderQueue) -> a
    void update() -> a
    void clean() -> b
    void access$0(com.millerni456.BlastTheBox.ExplosionTracker,boolean) -> a
com.millerni456.BlastTheBox.ExplosionTracker$1 -> com.millerni456.BlastTheBox.p:
    com.millerni456.BlastTheBox.ExplosionTracker this$0 -> a
    void run() -> run
com.millerni456.BlastTheBox.Flash -> com.millerni456.BlastTheBox.q:
    int[] ids -> d
    int frame -> a
    com.millerni456.BlastTheBox.geometry.Square s -> e
    boolean canDispose -> b
    boolean cleaned -> c
    void render(javax.microedition.khronos.opengles.GL10) -> a
    void nextFrame() -> a
    void clean() -> b
    void loadFlashTextures(android.app.Activity,javax.microedition.khronos.opengles.GL10) -> a
com.millerni456.BlastTheBox.FlashTracker -> com.millerni456.BlastTheBox.r:
    com.millerni456.BlastTheBox.Flash flash -> a
    boolean canUpdate -> b
    android.os.Handler flashHandler -> c
    java.lang.Runnable flashUpdater -> d
    void doFlash(int,int) -> a
    void update() -> a
    void render(javax.microedition.khronos.opengles.GL10) -> a
    void clean() -> b
com.millerni456.BlastTheBox.FlashTracker$1 -> com.millerni456.BlastTheBox.s:
    com.millerni456.BlastTheBox.FlashTracker this$0 -> a
    void run() -> run
com.millerni456.BlastTheBox.Game -> com.millerni456.BlastTheBox.t:
    com.millerni456.BlastTheBox.CE_Updater _updater -> s
    boolean started -> t
    boolean isPaused -> u
    boolean game_over -> v
    boolean game_played -> a
    int counter -> w
    java.util.ArrayList rows -> b
    com.millerni456.BlastTheBox.utils.RouletteWheel powerups -> c
    com.millerni456.BlastTheBox.utils.RouletteWheel cube_health -> d
    com.millerni456.BlastTheBox.utils.RouletteWheel indestructible -> e
    com.millerni456.BlastTheBox.GameSettings settings -> f
    com.millerni456.BlastTheBox.Player player -> g
    com.millerni456.BlastTheBox.ScoreTracker scoreTracker -> h
    com.millerni456.BlastTheBox.HealthTracker healthTracker -> i
    com.millerni456.BlastTheBox.BulletTracker bulletTracker -> j
    com.millerni456.BlastTheBox.ExplosionTracker explosionTracker -> k
    com.millerni456.BlastTheBox.FlashTracker flashTracker -> l
    com.millerni456.BlastTheBox.Darkener darkener -> m
    com.millerni456.BlastTheBox.StopwatchTracker stopwatchTracker -> n
    com.millerni456.BlastTheBox.Controller controller -> o
    com.millerni456.BlastTheBox.PauseManager pauseManager -> p
    com.millerni456.BlastTheBox.Scene scene -> q
    com.millerni456.BlastTheBox.utils.RenderQueue queue -> r
    void start() -> a
    void update() -> b
    void renderPerspective(javax.microedition.khronos.opengles.GL10) -> a
    void renderOrthographic(javax.microedition.khronos.opengles.GL10,int,int) -> a
    void endGame() -> c
    boolean gameOver() -> d
    void clean() -> e
    void onBulletImpact(com.millerni456.BlastTheBox.event.BulletImpactEvent) -> a
    void onPlayerDamage(com.millerni456.BlastTheBox.event.PlayerDamageEvent) -> a
    void onPausePlay(com.millerni456.BlastTheBox.event.PausePlayEvent) -> a
com.millerni456.BlastTheBox.GameSettings -> com.millerni456.BlastTheBox.u:
    double indestructible_chance -> a
    double gray_cube_chance -> b
    double green_cube_chance -> c
    double blue_cube_chance -> d
    double nuke_chance -> e
    double stopwatch_chance -> f
    double triplefire_chance -> g
    double pierce_chance -> h
    double shield_chance -> i
    double heart_chance -> j
    double ammo_chance -> k
    double strength1_chance -> l
    double strength2_chance -> m
    double score_speed -> n
    double cube_speed -> o
    double cube_density -> p
    boolean arcade_mode -> q
    boolean show_controller -> r
    int game_mode -> s
    java.lang.Integer[] getPowerups() -> a
    double[] getPowerupRarities() -> b
    java.lang.Integer[] getCubeHealths() -> c
    double[] getCubeHealthRarities() -> d
    java.lang.Integer[] getIndestructible() -> e
    double[] getIndestructibleRarity() -> f
com.millerni456.BlastTheBox.HealthTracker -> com.millerni456.BlastTheBox.v:
    com.millerni456.BlastTheBox.geometry.Square[] squares -> a
    com.millerni456.BlastTheBox.geometry.Square shield_cover -> b
    int maxhealth -> c
    int health -> d
    boolean hasShield -> e
    boolean initialized -> f
    void init(int,int) -> a
    void renderHealth(javax.microedition.khronos.opengles.GL10,int,int) -> a
    void clean() -> a
    void setHealth(int) -> a
    void setHasShield(boolean) -> a
com.millerni456.BlastTheBox.ParticleManager -> com.millerni456.BlastTheBox.w:
    com.millerni456.BlastTheBox.utils.RouletteWheel indexSelect -> m
    int MAX_PARTICLES -> a
    int PARTICLES_PER_CRATE -> b
    float LIFE -> c
    int usedParticles -> d
    float GRAVITY -> e
    com.millerni456.BlastTheBox.geometry.Square[] particles -> f
    float[] velX -> g
    float[] velY -> h
    float[] velZ -> i
    miller.opengl.Point3d[] loc -> j
    float[] age -> k
    boolean[] inUse -> l
    void initParticles(int,miller.opengl.Point3d,int) -> a
    void update() -> a
    void addToQueue(com.millerni456.BlastTheBox.utils.RenderQueue) -> a
    int pickTexture(int) -> a
    void clean(int) -> b
    void cleanAll() -> b
com.millerni456.BlastTheBox.PauseManager -> com.millerni456.BlastTheBox.x:
    boolean initialized -> c
    boolean isPaused -> d
    com.millerni456.BlastTheBox.geometry.Square s -> e
    com.millerni456.BlastTheBox.geometry.Square exit -> f
    com.millerni456.BlastTheBox.event.PausePlayListener listener -> a
    com.millerni456.BlastTheBox.Game current_game -> b
    void setPausePlayListener(com.millerni456.BlastTheBox.event.PausePlayListener) -> a
    void init(javax.microedition.khronos.opengles.GL10,int,int) -> c
    void pause() -> a
    void resume() -> b
    void renderPauser(javax.microedition.khronos.opengles.GL10,int,int) -> a
    void renderExit(javax.microedition.khronos.opengles.GL10,int,int) -> b
    java.lang.String getAction(int,miller.opengl.Point2d) -> a
    void tapPauseButton() -> c
    boolean isPaused() -> d
    void clean() -> e
com.millerni456.BlastTheBox.Player -> com.millerni456.BlastTheBox.y:
    java.util.ArrayList listeners -> a
    miller.opengl.Point3d location -> b
    int health -> c
    int maximumHealth -> d
    int strength -> e
    boolean isDead -> f
    boolean hasShield -> g
    boolean hasTripleFire -> h
    boolean homingBullets -> i
    boolean invinceable -> j
    android.os.Handler handler -> k
    java.lang.Runnable recover -> l
    java.lang.Runnable homingOff -> m
    int getHealth() -> a
    void setHealth(int) -> a
    void setMaximumHealth(int) -> b
    int getMaximumHealth() -> b
    void doDamage(int) -> c
    void addHealth(int) -> d
    void setStrength(int) -> e
    int getStrength() -> c
    boolean isDead() -> d
    void setShield(boolean) -> a
    boolean hasShield() -> e
    boolean hasTripleFire() -> f
    void setTripleFire(boolean) -> b
    void addListener(com.millerni456.BlastTheBox.event.PlayerListener) -> a
    void access$0(com.millerni456.BlastTheBox.Player,boolean) -> a
com.millerni456.BlastTheBox.Player$1 -> com.millerni456.BlastTheBox.z:
    com.millerni456.BlastTheBox.Player this$0 -> a
    void run() -> run
com.millerni456.BlastTheBox.Player$2 -> com.millerni456.BlastTheBox.aa:
    com.millerni456.BlastTheBox.Player this$0 -> a
    void run() -> run
com.millerni456.BlastTheBox.Row -> com.millerni456.BlastTheBox.ab:
    com.millerni456.BlastTheBox.geometry.Cube[] cubes -> a
    com.millerni456.BlastTheBox.geometry.Square[] powerups -> b
    float distance -> c
    double prevDist -> d
    com.millerni456.BlastTheBox.GameSettings settings -> e
    void init(com.millerni456.BlastTheBox.GameSettings) -> a
    void init(int,int,boolean) -> a
    void addToQueue(com.millerni456.BlastTheBox.utils.RenderQueue) -> a
    void moveCloser(float) -> a
    boolean checkCollision(miller.opengl.Point3d) -> a
    int collectedPowerup(miller.opengl.Point3d) -> b
    int pickPowerup() -> a
    int pickHealth() -> b
    boolean pickIndestructible() -> c
    int getCubeType(int,boolean) -> a
    void clean() -> d
com.millerni456.BlastTheBox.Scene -> com.millerni456.BlastTheBox.ac:
    boolean initialized -> e
    com.millerni456.BlastTheBox.geometry.Square floor_tile1 -> f
    com.millerni456.BlastTheBox.geometry.Square floor_tile2 -> g
    com.millerni456.BlastTheBox.geometry.Square floor_tile3 -> h
    com.millerni456.BlastTheBox.geometry.Square floor_tile4 -> i
    com.millerni456.BlastTheBox.geometry.Square left_side1 -> j
    com.millerni456.BlastTheBox.geometry.Square left_side2 -> k
    com.millerni456.BlastTheBox.geometry.Square left_side3 -> l
    com.millerni456.BlastTheBox.geometry.Square left_side4 -> m
    com.millerni456.BlastTheBox.geometry.Square right_side1 -> n
    com.millerni456.BlastTheBox.geometry.Square right_side2 -> o
    com.millerni456.BlastTheBox.geometry.Square right_side3 -> p
    com.millerni456.BlastTheBox.geometry.Square right_side4 -> q
    float z -> a
    float z2 -> b
    float z3 -> c
    float z4 -> d
    void init(javax.microedition.khronos.opengles.GL10) -> a
    void moveCloser(float) -> a
    void render(javax.microedition.khronos.opengles.GL10) -> b
com.millerni456.BlastTheBox.Score -> com.millerni456.BlastTheBox.ad:
    char[] initials -> a
    int score -> b
    int mode -> c
    java.lang.String initialsAsString() -> a
com.millerni456.BlastTheBox.ScoreTracker -> com.millerni456.BlastTheBox.ae:
    int score -> a
    com.millerni456.BlastTheBox.geometry.Square[] squares -> b
    com.millerni456.BlastTheBox.geometry.Square[] bSquares -> c
    boolean animateBonus -> d
    int bonusDigits -> e
    int bonusHeight -> f
    void addScore(int) -> a
    void addBonusScore(int,int) -> a
    int getScore() -> a
    void renderScore(javax.microedition.khronos.opengles.GL10,int,int) -> a
    void update(int) -> b
    void pickTextures() -> c
    void pickTexturesYellow(int) -> c
    int getDigits(int) -> d
    void clean() -> b
com.millerni456.BlastTheBox.StopwatchTracker -> com.millerni456.BlastTheBox.af:
    boolean slow_motion -> a
    boolean canUpdate -> g
    double cubeSpeedPercent -> b
    android.os.Handler handler -> h
    float density -> c
    float densityMod -> d
    float[] fogColor -> e
    float[] fogMod -> i
    float[] clearColor -> f
    float[] clearMod -> j
    java.lang.Runnable delay -> k
    void slowTime() -> a
    double getSpeedModifier() -> b
    void update() -> c
    float[] getFogColor() -> d
    float[] getClearColor() -> e
    float getDensity() -> f
    float[] access$0(com.millerni456.BlastTheBox.StopwatchTracker) -> a
    float[] access$1(com.millerni456.BlastTheBox.StopwatchTracker) -> b
    void access$2(com.millerni456.BlastTheBox.StopwatchTracker,boolean) -> a
com.millerni456.BlastTheBox.StopwatchTracker$1 -> com.millerni456.BlastTheBox.ag:
    com.millerni456.BlastTheBox.StopwatchTracker this$0 -> a
    void run() -> run
com.millerni456.BlastTheBox.event.BackButtonListener -> com.millerni456.BlastTheBox.a.a:
    com.millerni456.BlastTheBox.CE_Updater updater -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void backPressed(int,android.view.KeyEvent) -> a
com.millerni456.BlastTheBox.event.BulletImpactEvent -> com.millerni456.BlastTheBox.a.b:
    miller.opengl.Point3d cubeLocation -> a
    miller.opengl.Point3d bulletLocation -> b
    com.millerni456.BlastTheBox.Bullet bullet -> c
    com.millerni456.BlastTheBox.geometry.Cube cube -> d
    boolean isDead -> e
com.millerni456.BlastTheBox.event.BulletListener -> com.millerni456.BlastTheBox.a.c:
    void onBulletImpact(com.millerni456.BlastTheBox.event.BulletImpactEvent) -> a
com.millerni456.BlastTheBox.event.PausePlayEvent -> com.millerni456.BlastTheBox.a.d:
    int type -> a
    int getType() -> a
com.millerni456.BlastTheBox.event.PausePlayListener -> com.millerni456.BlastTheBox.a.e:
    void onPausePlay(com.millerni456.BlastTheBox.event.PausePlayEvent) -> a
com.millerni456.BlastTheBox.event.PlayerDamageEvent -> com.millerni456.BlastTheBox.a.f:
    com.millerni456.BlastTheBox.Player player -> a
com.millerni456.BlastTheBox.event.PlayerListener -> com.millerni456.BlastTheBox.a.g:
    void onPlayerDamage(com.millerni456.BlastTheBox.event.PlayerDamageEvent) -> a
com.millerni456.BlastTheBox.geometry.Box -> com.millerni456.BlastTheBox.b.a:
    miller.opengl.Point3d vloc -> c
    miller.opengl.Dimension3d dim -> a
    boolean cubeMap -> b
    float[] getVertexArray() -> a
    short[] getIndexArray() -> b
    float[] getTexCoordArray() -> c
    float[] getNormalArray() -> d
    int getRenderingMode() -> e
com.millerni456.BlastTheBox.geometry.Cube -> com.millerni456.BlastTheBox.b.b:
    int type -> c
    int health -> d
    boolean indestructible -> e
    void setHeath(int) -> a
    void doDamage(int) -> b
    void setIndestructible(boolean) -> a
    boolean isIndestructible() -> f
    void setType(int) -> c
    boolean isDead() -> g
    void chooseTexture() -> j
com.millerni456.BlastTheBox.geometry.Primitive -> com.millerni456.BlastTheBox.b.c:
    miller.opengl.Point3d loc -> f
    miller.opengl.Dimension3d scale -> g
    float yaw -> h
    float pitch -> i
    int[] id -> j
    int textureId -> k
    float[] vertices -> l
    short[] indices -> m
    float[] texCoords -> n
    float[] normals -> o
    int renderMode -> p
    java.nio.FloatBuffer vertexBuffer -> a
    java.nio.ShortBuffer indexBuffer -> b
    java.nio.FloatBuffer textureBuffer -> c
    java.nio.FloatBuffer normalBuffer -> d
    int texture -> q
    miller.opengl.Point3d getLocation() -> h
    int getRenderingMode() -> e
    float[] getVertexArray() -> a
    short[] getIndexArray() -> b
    float[] getTexCoordArray() -> c
    float[] getNormalArray() -> d
    void init(javax.microedition.khronos.opengles.GL10) -> a
    void draw(javax.microedition.khronos.opengles.GL10) -> b
    void setTexture(int) -> d
    void setLocation(miller.opengl.Point3d) -> a
    void setScale(miller.opengl.Dimension3d) -> a
    void setYaw(float) -> a
    void setPitch(float) -> b
    int getTexture() -> i
com.millerni456.BlastTheBox.geometry.Rectangle -> com.millerni456.BlastTheBox.b.d:
    int x -> a
    int y -> b
    int width -> c
    int height -> d
    void setLocation(int,int) -> a
    void setSize(int,int) -> b
com.millerni456.BlastTheBox.geometry.Square -> com.millerni456.BlastTheBox.b.e:
    miller.opengl.Point3d vloc -> b
    miller.opengl.Dimension2d dim -> a
    int X_iterations -> c
    int Y_iterations -> d
    int getRenderingMode() -> e
    float[] getVertexArray() -> a
    float[] getTexCoordArray() -> c
    short[] getIndexArray() -> b
    float[] getNormalArray() -> d
    boolean isTouched(miller.opengl.Point2d) -> a
com.millerni456.BlastTheBox.io.HighScores -> com.millerni456.BlastTheBox.c.a:
    com.millerni456.BlastTheBox.Score[] scoresE -> a
    com.millerni456.BlastTheBox.Score[] scoresM -> b
    com.millerni456.BlastTheBox.Score[] scoresH -> c
    void loadScores(android.content.Context) -> a
    com.millerni456.BlastTheBox.Score[] readFromFile(android.content.Context,java.lang.String,int) -> a
    void writeScores(android.content.Context) -> b
    void writeScoreArray(android.content.Context,java.lang.String,com.millerni456.BlastTheBox.Score[]) -> a
    void addScore(com.millerni456.BlastTheBox.Score) -> a
    com.millerni456.BlastTheBox.Score[] sort(com.millerni456.BlastTheBox.Score[]) -> a
com.millerni456.BlastTheBox.menus.GameOverScreen -> com.millerni456.BlastTheBox.d.a:
    com.millerni456.BlastTheBox.geometry.Square[] initials -> a
    com.millerni456.BlastTheBox.geometry.Square[] up_arrows -> b
    com.millerni456.BlastTheBox.geometry.Square[] down_arrows -> c
    com.millerni456.BlastTheBox.geometry.Square[] score_squares -> d
    com.millerni456.BlastTheBox.geometry.Square[] letters -> e
    com.millerni456.BlastTheBox.geometry.Square button_continue -> f
    int width -> g
    int height -> h
    boolean initialized -> i
    int score -> j
    boolean pulled_down -> k
    boolean canUpdate -> l
    float height_mod -> m
    int counter -> n
    char[] name -> o
    char[] title -> p
    void init(int,int) -> a
    void pullDown(int) -> a
    void update() -> a
    void render(javax.microedition.khronos.opengles.GL10,int,int) -> a
    char incrementCharacter(char) -> a
    char decrementCharacter(char) -> b
    java.lang.String getAction(android.view.MotionEvent) -> a
    char[] getInitials() -> b
    void pickTextures() -> d
    void clean() -> c
com.millerni456.BlastTheBox.menus.GuideMenu -> com.millerni456.BlastTheBox.d.b:
    int width -> a
    int height -> b
    com.millerni456.BlastTheBox.geometry.Square bg -> e
    com.millerni456.BlastTheBox.geometry.Square back -> f
    com.millerni456.BlastTheBox.geometry.Square prev -> g
    com.millerni456.BlastTheBox.geometry.Square next -> h
    com.millerni456.BlastTheBox.geometry.Square display -> i
    boolean initialized -> j
    int TOTAL_PAGES -> c
    int page -> d
    void init(int,int) -> a
    void render(javax.microedition.khronos.opengles.GL10,int,int) -> a
    java.lang.String getAction(android.view.MotionEvent) -> a
    void pickArrowTextures() -> b
    void clean() -> a
com.millerni456.BlastTheBox.menus.HighScoreMenu -> com.millerni456.BlastTheBox.d.c:
    int width -> a
    int height -> b
    int DISPLAY_MODE -> c
    com.millerni456.BlastTheBox.geometry.Rectangle scorebox -> d
    com.millerni456.BlastTheBox.geometry.Square bg -> e
    com.millerni456.BlastTheBox.geometry.Square back_button -> f
    com.millerni456.BlastTheBox.geometry.Square easy_button -> g
    com.millerni456.BlastTheBox.geometry.Square medium_button -> h
    com.millerni456.BlastTheBox.geometry.Square hard_button -> i
    char[] title_char -> j
    com.millerni456.BlastTheBox.geometry.Square[] title -> k
    com.millerni456.BlastTheBox.geometry.Square[] points -> l
    com.millerni456.BlastTheBox.geometry.Square[] place -> m
    com.millerni456.BlastTheBox.geometry.Square[] initials -> n
    boolean initialized -> o
    boolean scores_initialized -> p
    com.millerni456.BlastTheBox.Score[] scores -> q
    void init(int,int) -> a
    void initializeScores(int,int,int,int) -> a
    void render(javax.microedition.khronos.opengles.GL10,int,int) -> a
    java.lang.String getAction(android.view.MotionEvent) -> a
    void clean() -> a
    void cleanScores() -> b
    int getDigits(com.millerni456.BlastTheBox.Score[]) -> a
com.millerni456.BlastTheBox.menus.MainMenu -> com.millerni456.BlastTheBox.d.d:
    int width -> a
    int height -> b
    com.millerni456.BlastTheBox.geometry.Square bg -> c
    com.millerni456.BlastTheBox.geometry.Square button1 -> d
    com.millerni456.BlastTheBox.geometry.Square button2 -> e
    com.millerni456.BlastTheBox.geometry.Square button3 -> f
    com.millerni456.BlastTheBox.geometry.Square tm -> g
    com.millerni456.BlastTheBox.geometry.Square exit -> h
    com.millerni456.BlastTheBox.geometry.Square options -> i
    com.millerni456.BlastTheBox.geometry.Square achievements -> j
    com.millerni456.BlastTheBox.geometry.Square howtoplay -> k
    char[] title_char -> l
    com.millerni456.BlastTheBox.geometry.Square[] title_text -> m
    boolean initialized -> n
    void init(int,int) -> a
    void render(javax.microedition.khronos.opengles.GL10,int,int) -> a
    java.lang.String getAction(android.view.MotionEvent) -> a
com.millerni456.BlastTheBox.menus.OptionsMenu -> com.millerni456.BlastTheBox.d.e:
    int width -> a
    int height -> b
    int cell_H -> c
    int cell_W -> d
    int optionsboxX -> e
    int optionsboxW -> f
    int options_top_Y -> g
    float slider_X -> h
    float slider_Y -> i
    com.millerni456.BlastTheBox.geometry.Square bg -> r
    com.millerni456.BlastTheBox.geometry.Square back_button -> s
    char[] title_char -> t
    com.millerni456.BlastTheBox.geometry.Square[] title -> u
    com.millerni456.BlastTheBox.geometry.Square slider_base -> v
    com.millerni456.BlastTheBox.geometry.Square slider_thumb -> w
    com.millerni456.BlastTheBox.geometry.Square music_toggle -> x
    com.millerni456.BlastTheBox.geometry.Square soundfx_toggle -> y
    com.millerni456.BlastTheBox.geometry.Square controller_toggle -> z
    com.millerni456.BlastTheBox.geometry.Square slider_text -> A
    com.millerni456.BlastTheBox.geometry.Square music_text -> B
    com.millerni456.BlastTheBox.geometry.Square soundfx_text -> C
    com.millerni456.BlastTheBox.geometry.Square controller_text -> D
    com.millerni456.BlastTheBox.geometry.Square[] slider_output -> E
    com.millerni456.BlastTheBox.geometry.Square reset_button -> F
    boolean initialized -> G
    float sensitivity -> j
    boolean soundfx_enabled -> k
    boolean music_enabled -> l
    boolean controller_enabled -> m
    miller.opengl.Point3d thumbLoc -> n
    float thumb_W -> o
    float slider_W -> p
    boolean soundLooping -> q
    void init(int,int) -> a
    void render(javax.microedition.khronos.opengles.GL10,int,int) -> a
    java.lang.String getAction(android.view.MotionEvent) -> a
    void touchScreen(miller.opengl.Point2d) -> a
    void repositionThumb() -> c
    void calculateSensitivity() -> d
    void clean() -> a
    void setupSliderOutput(float,int) -> a
    void resetToDefaults() -> b
com.millerni456.BlastTheBox.utils.AbstractRenderer -> com.millerni456.BlastTheBox.e.a:
    int width -> k
    int height -> l
    float[] clearColor -> m
    void render(javax.microedition.khronos.opengles.GL10) -> b
    void init(javax.microedition.khronos.opengles.GL10) -> a
    void resize(javax.microedition.khronos.opengles.GL10,int,int) -> a
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void resetClearColor() -> b
com.millerni456.BlastTheBox.utils.AndroidGLCamera -> com.millerni456.BlastTheBox.e.b:
    float x -> a
    float y -> b
    float z -> c
    float xL -> d
    float yL -> e
    float zL -> f
    float renderDistance -> g
    float yaw -> h
    float pitch -> i
    float roll -> j
    float vectorX -> k
    float vectorY -> l
    float vectorZ -> m
    double pitchMin -> n
    double pitchMax -> o
    boolean pitchRestricted -> p
    void setPosition(float,float,float) -> a
    void setFocusPoint(float,float,float) -> b
    void strafeLeft(float) -> a
    void strafeRight(float) -> b
    void updateFocusPoint() -> c
    void attachCamera(javax.microedition.khronos.opengles.GL10) -> a
    float getXPos() -> a
    float getYPos() -> b
    void setXPos(float) -> c
com.millerni456.BlastTheBox.utils.CubeStorage -> com.millerni456.BlastTheBox.e.c:
    com.millerni456.BlastTheBox.geometry.Cube[] cubes -> a
    boolean[] used -> b
    void createCubes(javax.microedition.khronos.opengles.GL10) -> a
    com.millerni456.BlastTheBox.geometry.Cube getCube() -> a
    void giveCube(com.millerni456.BlastTheBox.geometry.Cube) -> a
com.millerni456.BlastTheBox.utils.Letter -> com.millerni456.BlastTheBox.e.d:
    int A -> a
    int B -> b
    int C -> c
    int D -> d
    int E -> e
    int F -> f
    int G -> g
    int H -> h
    int I -> i
    int J -> j
    int K -> k
    int L -> l
    int M -> m
    int N -> n
    int O -> o
    int P -> p
    int Q -> q
    int R -> r
    int S -> s
    int T -> t
    int U -> u
    int V -> v
    int W -> w
    int X -> x
    int Y -> y
    int Z -> z
    int EXCLAMATION -> A
    int SPACE -> B
    void loadLetters(android.app.Activity,javax.microedition.khronos.opengles.GL10) -> a
    int getLetter(char) -> a
com.millerni456.BlastTheBox.utils.Number -> com.millerni456.BlastTheBox.e.e:
    int ZERO -> a
    int ONE -> b
    int TWO -> c
    int THREE -> d
    int FOUR -> e
    int FIVE -> f
    int SIX -> g
    int SEVEN -> h
    int EIGHT -> i
    int NINE -> j
    int ZEROy -> k
    int ONEy -> l
    int TWOy -> m
    int THREEy -> n
    int FOURy -> o
    int FIVEy -> p
    int SIXy -> q
    int SEVENy -> r
    int EIGHTy -> s
    int NINEy -> t
    int PLUSy -> u
    int PERCENT -> v
    void loadNumbers(android.app.Activity,javax.microedition.khronos.opengles.GL10) -> a
    int getNumberTextureFromChar(char) -> a
    int getYellowNumberTexture(int) -> a
com.millerni456.BlastTheBox.utils.RenderQueue -> com.millerni456.BlastTheBox.e.f:
    java.util.ArrayList renderables -> a
    java.util.HashMap map -> b
    int[] indexArray -> c
    void addToQueue(com.millerni456.BlastTheBox.utils.Renderable) -> a
    void render(javax.microedition.khronos.opengles.GL10) -> a
    int partition(int[],int,int) -> a
    void sort(int[],int,int) -> b
com.millerni456.BlastTheBox.utils.Renderable -> com.millerni456.BlastTheBox.e.g:
    void draw(javax.microedition.khronos.opengles.GL10) -> b
    miller.opengl.Point3d getLocation() -> h
com.millerni456.BlastTheBox.utils.RouletteWheel -> com.millerni456.BlastTheBox.e.h:
    java.lang.Object[] items -> a
    double[] rarities -> b
    double[] mark_L -> c
    double[] mark_R -> d
    void setItems(java.lang.Object[],double[]) -> a
    java.lang.Object spin(java.util.Random) -> a
com.millerni456.BlastTheBox.utils.S -> com.millerni456.BlastTheBox.e.i:
    java.util.Random ran -> a
com.millerni456.BlastTheBox.utils.SoundManager -> com.millerni456.BlastTheBox.e.j:
    com.millerni456.BlastTheBox.utils.SoundManager _instance -> q
    android.media.SoundPool mSoundPool -> r
    java.util.HashMap mSoundPoolMap -> s
    int[] streamID -> t
    boolean[] streamUsed -> u
    android.media.AudioManager mAudioManager -> v
    android.content.Context mContext -> w
    boolean MUTED -> a
    int boom -> b
    int nuclear_explosion -> c
    int shot -> d
    int heartbeat -> e
    int reload -> f
    int shield -> g
    int stopwatch -> h
    int green_up -> i
    int blue_up -> j
    int click -> k
    int click2 -> l
    int pierce -> m
    int[] ahh -> n
    int shield_off -> o
    int triple -> p
    com.millerni456.BlastTheBox.utils.SoundManager getInstance() -> a
    void initSounds(android.content.Context) -> a
    void loadSounds() -> b
    void playSound(int,float) -> a
    void stopSound(int) -> a
    void stopAllSounds() -> c
    void clean() -> d
com.millerni456.BlastTheBox.utils.SoundPlayer -> com.millerni456.BlastTheBox.e.k:
    com.millerni456.BlastTheBox.utils.SoundPlayer _instance -> b
    android.content.Context _context -> c
    android.media.MediaPlayer mp -> d
    boolean MUTED -> a
    com.millerni456.BlastTheBox.utils.SoundPlayer getInstance(android.content.Context) -> a
    void loopSound(int) -> a
    void stopSound() -> a
    android.media.MediaPlayer getMediaPlayer() -> b
    void clean() -> c
com.millerni456.BlastTheBox.utils.SquareStorage -> com.millerni456.BlastTheBox.e.l:
    com.millerni456.BlastTheBox.geometry.Square[] squares -> a
    boolean[] used -> b
    void createSquares(javax.microedition.khronos.opengles.GL10) -> a
    com.millerni456.BlastTheBox.geometry.Square getSquare() -> a
    void giveSquare(com.millerni456.BlastTheBox.geometry.Square) -> a
com.millerni456.BlastTheBox.utils.Texture -> com.millerni456.BlastTheBox.e.m:
    java.lang.String name -> a
    int textureId -> b
    void createTexture(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap) -> a
    void bind(javax.microedition.khronos.opengles.GL10) -> a
    void setRepeating(javax.microedition.khronos.opengles.GL10,int) -> a
    void setTextureEnvelope(javax.microedition.khronos.opengles.GL10,int,int) -> a
    android.graphics.Bitmap getBitmapFromDrawable(android.content.res.Resources,int) -> a
com.millerni456.BlastTheBox.utils.Textures -> com.millerni456.BlastTheBox.e.n:
    int block_one -> a
    int block_two -> b
    int block_three -> c
    int block_four -> d
    int floor -> e
    int floor_transl -> f
    int floor_transr -> g
    int powerup_heart -> h
    int powerup_stopwatch -> i
    int powerup_nuke -> j
    int powerup_shield -> k
    int powerup_triplefire -> l
    int powerup_ammo -> m
    int powerup_strength1 -> n
    int powerup_strength2 -> o
    int powerup_pierce -> p
    int health_on -> q
    int health_off -> r
    int cursor -> s
    int missile -> t
    int missile2 -> u
    int missile3 -> v
    int ammo_counter -> w
    int piercing_counter -> x
    int menu_main -> y
    int menu_highscores -> z
    int arrow_up -> A
    int arrow_down -> B
    int arrow_left -> C
    int arrow_right -> D
    int button_easymode -> E
    int button_mediummode -> F
    int button_hardmode -> G
    int button_back -> H
    int button_exit -> I
    int button_options -> J
    int button_achievements -> K
    int button_continue -> L
    int button_fire -> M
    int button_pause -> N
    int button_play -> O
    int button_pause_exit -> P
    int button_howtoplay -> Q
    int button_prev_on -> R
    int button_prev_off -> S
    int button_next_on -> T
    int button_next_off -> U
    int button_easy_on -> V
    int button_easy_off -> W
    int button_medium_on -> X
    int button_medium_off -> Y
    int button_hard_on -> Z
    int button_hard_off -> aa
    int trans -> ab
    int shield_cover -> ac
    int slider_base -> ad
    int slider_thumb -> ae
    int music_on -> af
    int music_off -> ag
    int soundfx_on -> ah
    int soundfx_off -> ai
    int controller_on -> aj
    int controller_off -> ak
    int button_reset -> al
    int text_TM -> am
    int text_tolerance -> an
    int text_music -> ao
    int text_soundfx -> ap
    int text_controller -> aq
    int[] guide -> ar
    void loadTextures(android.app.Activity,javax.microedition.khronos.opengles.GL10) -> a
